{% import 'variables-ios.jinja' as ios with context %}
{% import 'variables.jinja' as vars with context %}
{{ (vars.api_name + '/ViewController')|start_of_file -}}
{{- ios.file_header('ViewController.m') }}
#import "ViewController.h"
#import "Api.h"
{% for definition_name, definition in swagger.definitions.iteritems() if definition.type == 'object' -%}
#import "{{ definition_name }}.h"
{% endfor %}

@interface ViewController () <UITableViewDelegate, UITableViewDataSource>

@property (nonatomic, weak) IBOutlet UITextView* logOutputView;

@end

@implementation ViewController

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return {{ operations|length }};
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UITableViewCell* cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"OperationCell"];
    switch(indexPath.row) {
      {% for operation_name, operation in operations.iteritems() %}
      case {{ loop.index - 1 }}:
          cell.textLabel.text = @"{{ operation_name }}";
          break;
      {% endfor %}
    }
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    switch(indexPath.row) {
      {% for operation_name, operation in operations.iteritems() %}
      case {{ loop.index - 1 }}: {
          [self log:@"Performing call: {{ operation_name }}"];
          __weak ViewController* weakSelf = self;
          {% set success_block %}
          {
              [weakSelf log:@"{{ operation_name }} Success!"];
          }
          {% endset %}
          {% set failure_block %}
          {
              [weakSelf log:[NSString stringWithFormat:@"{{ operation_name }} Failure! %@", error]];
          }
          {% endset %}
          {{ operation|example_call(success_block, failure_block)}}
          /*
          [Api
           {{ operation_name }}OnSuccess:^{
               [weakSelf log:@"{{ operation_name }} Success!"];
           }
           onFailure:^(NSError* error) {
               [weakSelf log:[NSString stringWithFormat:@"{{ operation_name }} Failure! %@", error]];
           }];
           */
           break;
      }
           
      {% endfor %}
    }
}

- (void)log:(NSString*)string
{
    NSDate* currentDate = [NSDate date];
    NSDateFormatter* formatter = [[NSDateFormatter alloc] init];
    formatter.timeStyle = NSDateFormatterShortStyle;
    formatter.dateStyle = NSDateFormatterShortStyle;
    self.logOutputView.text = [self.logOutputView.text stringByAppendingFormat:@"\n%@: %@", [formatter stringFromDate:currentDate], string];
    NSRange range = NSMakeRange(self.logOutputView.text.length - 1, 1);
    [self.logOutputView scrollRangeToVisible:range];
}

@end
